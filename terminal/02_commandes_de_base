#----------------------------------------------------
'Les commandes de bases et leurs principales options'
#----------------------------------------------------

Il faut bien comprendre que sur tout système informatique,
nous disposons d'une interface graphique pour les tâches quotidiennes
et nous avons aussi une interface non graphique,
appelée "console" pour les tâches d'administration du système.

Sous Windows le plus souvent l'administration se fait en graphique.
Cela vient du coté peu ergonomique dont souffre la console sous cet OS

Sous Linux, il s'agit au contraire d'un outil redoutablement efficace.
De plus son utilisation permet de passer d'un distribution à une autre,
moyennant un temps d'adaptation très court.

1 - L'invite de commande
#-----------------------

========================================================================================
# Console graphique
# =================
[jpantinoux@prunelle:~] $

Cette ligne apparait lorsque l'on ouvre une console graphique
Elle signifie littéralement :
Vous êtes l'utilisateur "jpantinoux" dans la machine [prunelle]. Vous vous trouvez dans votre dossier utilisateur :"~".
Le signe "$" indique que vous êtes un simple utilisateur.

Il est bien sûr possible de passer en mode administrateur (nous verrons plus bas)


========================================================================================
# Console virtuelle
# =================
Dans une console virtuelle (F1 à F6), l'invite n'apparait pas directement connecté.
En effet lorsque vous êtes dans votre session graphique, vous vous êtes déjà identifié par votre login et mot de passe.
C'est pourquoi votre console est déjà connectée.

En console virtuelle il faut vous identifier :
Pourquoi ?
La pluspart des serveurs tournant sous Linux n'ont pas d'interface graphique.
Pour une question de sécurité il est important que la machine ne puisse être accessible
que part un tehnicien. Il est donc normal qu'au démarrage ou lorsque l'on passe en console 
virtuelle, il faille s'identifier.

L'invite est au départ la suivante :
	
	prunelle login:

IL nous faut donc taper notre login (identifiant)

	prunelle login: jpantinoux '<entrée>'
	Password:

Lorsque vous tapez le mot de passe, celui-ci ne s'affiche pas.
C'est normal.
Il s'agit d'un sécurité qui évite que quelqu'un de mal intentionné ne compte le nombre de caractères de votre mot de passe.
Si la connection réussi, le système affiche le dernier accès à cette console.
	
	Last Login: Thu Sep 22 01:06:53 from prunelle
	[jpantinoux@prunelle:~] $


========================================================================================
2 - Se déplacer dans les répertoires
#-----------------------------------

Utilisateur :           Oui
Administrateur :        Oui

Invite de commande
[jpantinoux@prunelle:~] $ 

========================================================================================
# La commande ls
# ==============
Elle permet de lister les fichiers dans un répertoire
Essayons

--> $ ls
''''''''
2_test_svn                    DD20_Go                IMG_0093.JPG     openDNS~            sécurité_thun
atelierlinux.regards.free.fr  Documents              inkscape         Outils_compilation  site_regards
Avocat_mairin                 etc                    Investissements  ouverture.odt       smb.conf~
bash                          Famille_antinoux.ged   Klavaro          Pierrette           smb.conf_JM
basics                        Firefox_wallpaper.png  les_bases        podcasts fr3        source_rsync_vers_zip
bin                           fireftp                Mac bart         preparer_un_disque  SSH-HOWTO
Bureau                        fleche_rouge.png       menu.lst         Public              Téléchargements
centos                        formation niki         microlinux       reseau_JM           test_JM
Certificats de révocation     Fouzitou               Modèles          samba_ubuntu.pdf    translog.201100.log
compilation                   freebox                Musique          scribus             Vidéos
configurer freebox            Généalogie             netstat_lsof     securite_fichiers   vista_samba
controle_md5                  Images                 openDNS          securite.html       zip

Cette liste nous retourne sous sa forme la plus simple. Les éléments ne sont identifiés que par leur couleur

	Les éléments en bleu représentent des répertoires.	(ex : 2_test_svn, basics...)
	Les éléments en blanc sont des fichiers.		(ex : compilation, configurer freebox...)
	Les éléments en jaune sont des exécutables		(ex : controle_md5, réseauJM...)
	Les éléments en violet sont des images			(ex : Firefox_wallpaper.png...)

Pour l'instant c'est tout ce que nous pouvons en savoir.

Essayons la même chose en changeant de répertoire.
Demandons à voir le contenu de la racine du système.

--> $ ls /
''''''''''
	bin   cgroup  etc   lib         media  opt      proc  sbin     srv  tmp  var
	boot  dev     home  lost+found  mnt    partage  root  selinux  sys  usr


Que pouvons nous déduire de ce dernier essai ?

	- On m'avais dit qu'un utilisteur simple n'avait pas le droit de rentrer dans le système.
	- Rentrer peut-être pas, mais voir les principaux répertoires, oui !!

	- A partir de là où l'on se trouve, pour accéder à un point donné, il faut toujours partir
	  de la racine, symbolisée par "/" pour être sur de trouver son chemin

========================================================================================
# Lister tous les fichiers y compris les fichiers et répertoires cachés
# ===========================================================================
$ ls -a
''''''''
.                             .dbus                  .gnucash         menu.lst             securite_fichiers
..                            DD20_Go                .gnupg           microlinux           securite.html
2_test_svn                    .designer              .googleearth     Modèles              sécurité_thun
.adobe                        .dmrc                  .gstreamer-0.10  .mozilla             site_regards
.ancestris                    Documents              .gtk-bookmarks   .mplayer             smb.conf_JM

L'option "a" est précédée d'un tiret.
	La pluspart des commandes fonctionnent de cette manière.
	On appelle la commande puis on ajoute des options.
	Dans note cas "-a" va afficher tous les éléments cachés.

.mozilla est un dossier qui contient les paramètres personnel de Firefox pour l'utilisateur.

	Deux répertoires particuliers :
		"."
		Vous avez bien lu, il ne s'agit pas d'une erreur de frappe.
		Le "." est une commande qui signifie "ici".
		Elle est utile lorsque vous demander d'exécuter une action en précisant
		le répertoire où vous vous trouvez.

		".."
		Cette fois les deux points signifient "répertoire parent"
		Lorsque vous vous trouvez dans /home/jpantinoux/Documents
		L'invocation des ".." avec la commande adhéquate permet de remonter
		vers /home/jpantinoux.

========================================================================================
# Lister les éléments contenus dans un répertoire avec un identifiant de type
# ===========================================================================
$ ls -F
''''''''
2_test_svn/                    controle_md5*          Images/           openDNS             site_regards/
atelierlinux.regards.free.fr/  DD20_Go/               IMG_0093.JPG      Outils_compilation  smb.conf_JM
Avocat_mairin/                 Documents/             inkscape/         ouverture.odt       source_rsync_vers

	Un / après le nom de l'élément indique un répertoire
	Une * indique un fichier régulier exécutable (un script)
	Si l'élément n'est suivi d'aucune indication, il s'agit d'un fichier régulier

========================================================================================
# Lister les éléments d'un répertoire
# ===================================
	-l : sous forme de liste
	-h : human readable
	-t : trier par ordre de date
	-r : renverser le tri
Cette option permet d'avoir (surtout utile dans une longue liste) les derniers éléments modifiés en bas

$ ls -lhrt
''''''''''
total 16K
-rw-rw-r--. 1 jpantinoux jpantinoux  721 23 juil. 00:34 commandes_unix
-rw-rw-r--  1 jpantinoux jpantinoux 2,0K  8 déc.  01:01 commandes_de_base
-rw-rw-r--  1 jpantinoux jpantinoux 7,9K  8 déc.  01:43 les_bases

========================================================================================
# Lister le contenu d'un répertoire sans y entrer
# ===============================================
$ ls -lh /etc/samba
''''''''''''''''''''
[jpantinoux@prunelle:~] $ ls -lh /etc/samba
total 20K
-rw-r--r--. 1 root root   20  4 juil. 23:55 lmhosts
-rw-r--r--  1 root root  252 18 oct.  18:46 smb.conf
-rw-r--r--  1 root root 9,7K  9 sept. 00:29 smb.conf_old

========================================================================================
# Lister les caractéristiques d'un fichier
# ========================================
$ ls -lh les_bases
''''''''''''''''''
[jpantinoux@prunelle:~/2_test_svn/basics/bases_console] $ ls -lh les_bases 
-rw-rw-r-- 1 jpantinoux jpantinoux 7,9K  8 déc.  01:43 les_bases

========================================================================================
# Lister les caractéristiques d'un répertoire
# ===========================================
$ ls -ld bases_console
''''''''''''''
[jpantinoux@prunelle:~/2_test_svn/basics] $ ls -ld bases_console/
drwxrwxr-x. 3 jpantinoux jpantinoux 4096  8 déc.  12:48 bases_console/

========================================================================================
# Raccourcis personnalisés
# ========================
L'utilisateur de même que l'administrateur peuvent paramétrer, dans le fichier .bashrc
qui se trouve à la racine de chaque utilisateur, des raccourcis pour ne pas taper
toujours les même commandes.
Dans l'exemple suivant taper "ll" au clavier sera équivalent à taper "ls -lh"

A mettre dans .bashrc pour créer le raccourcis ll qui pemplace la commande ls -lh
alias ll='ls -lh'
''''''''''''''''

========================================================================================
# Où suis-je ?
# ============
Dans tout ce dédale de fichiers et de répertoires, il est facile de se perdre ou du moins
de ne plus savoir si l'on est dans une machine ou dans une autre !!

Ou suis-je ?
$ pwd
Cette commande nous retourne le chemin de l'emplacement où l'on se trouve sous la forme :
/home/jpantinoux/Documents/

========================================================================================
# Changer de répertoire
# =====================
Maintenant que nous avons vu comment consulter le contenu des répertoires nous allons nous déplacer
vers d'autres emplacement dans notre système.

La commande cd
Littéralement "change directory"
Celle-ci nous permet de désigner la destination vers laquelle nous voulons nous déplacer

cd /home/jpantinoux/Téléchargements

Cette commande nous emmene à partir de la racine du système (/), vers le répertoire utilisteur
de jpantinoux, puis dans son répertoire Téléchargement.

cd ..

Les ".." à la suite de la commande "cd" nous permettent de remonter dans le dossier parent
comme nous l'avons vu plus haut.
Nous nous retrouvons dans le répertoire suivant :
/home/jpantinoux

cd ../..

La commande inscrite ci-dessus nous permet de remonter de deux niveaux dans les répertoires
Nous nous retrouvons donc dans le répertoire le plus haut dans le système :
/

cd

Un moyen plus efficace de remonter directement notre répertoire utilisateur est d'invoquer la
commande cd seule.
$ cd
[jpantinoux@prunelle:~] $

Autre option pratique :
Nous nous trouvons dans le répertoire /etc/
Avec la commande cd, nous nous déplaçons vers le répertoire /usr/share/icons/
$ cd /usr/share/icons/
Pour retourner directement vers /etc/ sans réécrire le chemin (sourtout s'il est plus complexe que celui-ci) :
$ cd -
Et nous revoila de retour dans /etc/


========================================================================================

# Manipuler du texte : echo et cat
# ================================

Afficher du texte sur l'écran
$ echo Bonjour Monsieur !

Envoyer un texte dans un fichier en écrasant son contenu (ici le fichier est vide !)
$ echo Bonjour Monsieur ! > bonjour.txt

Voir le contenu de bonjour.txt
$ cat bonjour.txt

Envoyer un texte dans un second fichier
$ echo Bonjour Madame ! > bonjour2.txt

Envoyer un texte dans un troisième fichier
$ echo Bonjour les enfants ! > bonjour3.txt

Afficher les trois lignes des trois fichiers dans le terminal
$ cat bonjour.txt bonjour2.txt bonjour3.txt
Bonjour Monsieur
Bonjour Madamme
Bonjour les enfants

$ cat bonjour.txt bonjour2.txt bonjour3.txt > bonjourtous.txt
$ cat bonjourtoux.txt
Bonjour Monsieur
Bonjour Madamme
Bonjour les enfants

Exemple concret dans un script :
cat /template/smb.conf > /etc/samba/smb.conf

Ici tout le contenu du modèle va écraser le contenu du fichier de destination
Il n'y à pas de garde fou. Il faut être sur de ce que l'on fait.
C'est pourquoi il vaut mieux dans tout les cas faire une copie du fichier d'origine :
cp /etc/samba/smb.conf /etc/samba/smb.conf.old

Dans notre script nous aurons donc les deux lignes
cp /etc/samba/smb.conf /etc/samba/smb.conf.old
cat /template/smb.conf > /etc/samba/smb.conf

cat permet aussi de visualiser certain fichier sensible :
cat /proc/cpuinfo

Une autre utilisation de cat
Ecrite directement le texte sur la console avec les
retour à la ligne avec << EOF <<EOF

cat ~/livres.txt << EOF
L'ile mystérieuse
Le nom de la rose
le seigneur des anneaux
<<EOF

========================================================================================
# Visualiser du texte : more et less
# ==================================
more
Comme cat mais en mieux pour afficher le contenu des fichiers
Certains fichiers ne doivent pas être ouverts avec un éditeur
qui peut détruire les données
	
  --> cat /etc/ssh/sshd.conf
	--> more /etc/passwd
	Entrée pour avancer d'une ligne
	Espace pour avancer d'une page
	Touche B pour remonter pages par pages
	Touche Q pour quitter
	Arrivé à la fin, more quitte

	--> more /etc/service

less
	--> less /etc/ssh/sshd.conf
	Touches directionnelles haut/bas
	Touches directionnelles droite/gauche
	/nologin (recherche)
	n = next (prochaine occurence)
	maj+n = précédant (occurence précédante)

	more et less - visualiseurs non destructeurs

========================================================================================
# Créer fichers et répertoires
# ============================
Créer un fichier tout simple
touch
	--> touch fichier.txt

Créer un répertoire
mkdir
	--> mkdir test
	--> mkdir test\ 1 'test 2' "test 3"
Trois façons de faire pour les espaces dans les noms :
Le caractère d'échappement (\) comme dans test\ 1
Les guillemets simples ou doubles 



========================================================================================
# Lister une arborescence en console
# ==================================

# tree save
save/
└── bin
    ├── procedure_zac
        └── save_all.sh

1 directory, 2 files


========================================================================================
# Copier un fichier
# =================
cp
	--> cp fichier.txt fichier1.txt
	--> cp fichier.txt ~/Documents/


========================================================================================
# Déplacer ou couper/renommer un fichier
# =====================================
mv
	--> mv fichier.txt fichier1.txt
	--> mv fichier.txt ~/Documents/


========================================================================================
# Supprimer définitivement un fichier ou un répertoire
# ====================================================
rm
	--> rm fichier.txt
	--> rm -v fichier.txt
	--> rm -rf dossier\ plein

========================================================================================
# Supprimer définitivement un répertoire vide
# ===========================================
rmdir
	--> rmdir dossier\ vide


========================================================================================
# Nettoyer la console (place l'invite en haut de l'écran
# ======================================================
ctrl + l


========================================================================================
# Raccourcis pour quitter la console
# ==================================
ctrl + d
Se déconnecter du compte administrateur
ctrl + d à nouveau quitte la console


========================================================================================
# Editeur de texte installé par défaut
# ====================================
Vi

========================================================================================
# Editeur amélioré que nous utiliserons
# =====================================
Vim

========================================================================================
# Apprendre à utiliser Vim
# ========================
Vimtutor
Il ne faut pas essayer d'apprendre les commandes de Vim par coeur
Mais au contraire il faut que les rélexes viennent par la pratique
Vimtutor est là pour ça !


========================================================================================
# Etre plus efficasse
# ===================
Complétion automatique

Quand on tape par ex /et
On appuie sur tabulation et on obtien
/etc/
Là nous n'avons pas gagné beaucoup de temps mais nous sommes sur
que notre chemin ou notre commande est validé par les système.
Si ce que nous avons écrit ne se complète pas c'est que nous avons
fait une erreur.

========================================================================================
# Retrouver les commandes que nous avons tapé
# ===========================================
history
513  cat sshd_config 
514  less sshd_config 
515  more sshd_config 
516  cd /usr/share/debian
517  ll
518  maya/
519  cd maya/
520  ll
521  cd config/
522  ll
523  tree scripts/
524  cd ..
525  tree save/
526  history

pour réutiliser une commande il faut taper :
517!

========================================================================================
# Retrouver une commande lorsque l'on se rappelle d'un partie
# ===========================================================
Ctrl + r
Dès que l'on tape les première lettre la commande se complète
toute seule :

(reverse-i-search)`d': dig google.fr
Ici je n'ai tapé que le "d"

Si ce n'est pas la bonne --> flèche du bas

========================================================================================
# Le premier endroit où chercher de la documentation (RTFM)
# =========================================================
man
man vim
et le sommet :
man man

Et voilà !
